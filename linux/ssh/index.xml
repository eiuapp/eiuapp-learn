<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation for Hugo Learn Theme</title>
    <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh.html</link>
    <description>Recent content on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 29 Sep 2018 20:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://eiuapp.github.io/eiuapp-learn/linux/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ssh</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/</link>
      <pubDate>Sat, 29 Sep 2018 20:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/</guid>
      <description>linux ssh</description>
    </item>
    
    <item>
      <title>SSH远程命令找不到环境变量</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/ssh-command-env-not-found-command.html</link>
      <pubDate>Sat, 29 Sep 2018 20:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/ssh-command-env-not-found-command.html</guid>
      <description>解决SSH远程执行命令找不到环境变量的问题
env  ssh  原理 https://blog.csdn.net/whitehack/article/details/51705889 (这个写得最好) https://www.jianshu.com/p/77ebeb27a2dc (简单) https://www.cnblogs.com/zhenyuyaodidiao/p/9287497.html
实践 在 ssh 服务端 找到 # If not running interactively, don&#39;t do anything , (在这一行下面,一般会有一句return之类的), 在这一行下面, 加入我们需要的环境变量. 但是, 也不能加多了, 加多了, scp 会失效.
如下面,就是加多了, 如果报错, 则导致 远程scp不了文件.
$ vi /home/lcnx/.bashrc # If not running interactively, don&#39;t do anything export NVM_DIR=&amp;quot;$HOME/.nvm&amp;quot; [ -s &amp;quot;$NVM_DIR/nvm.sh&amp;quot; ] &amp;amp;&amp;amp; \. &amp;quot;$NVM_DIR/nvm.sh&amp;quot; # This loads nvm [ -s &amp;quot;$NVM_DIR/bash_completion&amp;quot; ] &amp;amp;&amp;amp; \. &amp;quot;$NVM_DIR/bash_completion&amp;quot; # This loads nvm bash_completion nvm use v11.</description>
    </item>
    
    <item>
      <title>mac 上安装 sshpass</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/how-to-install-sshpass-on-mac.html</link>
      <pubDate>Wed, 30 Jan 2019 00:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/how-to-install-sshpass-on-mac.html</guid>
      <description> brew install https://raw.githubusercontent.com/kadwanev/bigboybrew/master/Library/Formula/sshpass.rb  Ref  https://stackoverflow.com/questions/32255660/how-to-install-sshpass-on-mac fs  </description>
    </item>
    
    <item>
      <title>Can scp create a directory if it doesn&#39;t exist?</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/can-scp-create-a-directory-if-it-doesnt-exist.html</link>
      <pubDate>Sat, 19 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/can-scp-create-a-directory-if-it-doesnt-exist.html</guid>
      <description>Can scp create a directory if it doesn&amp;rsquo;t exist?
As far as I know, scp itself cannot do that, no. However, you could just ssh to the target machine, create the directory and then copy. Something like:
ssh user@host &amp;quot;mkdir -p /target/path/&amp;quot; &amp;amp;&amp;amp; scp /path/to/source user@host:/target/path/  Note that if you are copying entire directories, the above is not needed. For example, to copy the directory ~/foo to the remote host, you could use the -r (recursive) flag:</description>
    </item>
    
    <item>
      <title>ssh登录时如何直接在参数中加入登录密码</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/sshpass-let-ssh-login-with-password.html</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/sshpass-let-ssh-login-with-password.html</guid>
      <description>sshpass: 用于非交互的ssh 密码验证
　ssh登陆不能在命令行中指定密码，也不能以shell中随处可见的，sshpass 的出现，解决了这一问题。它允许你用 -p 参数指定明文密码，然后直接登录远程服务器。 它支持密码从命令行,文件,环境变量中读取。
　办法找到了，现在先在自己机器上安装。
　对于debian/ubuntu系统来说，安装方式很简单：
sudo apt-get install sshpass  　对于其他系统来说，可以通过编译源码：
wget http://sourceforge.net/projects/sshpass/files/sshpass/1.05/sshpass-1.05.tar.gz tar xvzf sshpass-1.05.tar.gz ./configure make sudo make install  　./configure 后可以添加参数指定安装目录，比如：
./configure --prefix=/usr/local/Cellar/sshpass/1.05  　来把sshpass安装到自己喜欢的位置，如果没有这个参数，则安装到默认位置。
　安装好了后，输入sshpass来查看是否安装好了：
➜ ~ git:(master) ✗ sshpass -V sshpass 1.05 (C) 2006-2011 Lingnu Open Source Consulting Ltd. This program is free software, and can be distributed under the terms of the GPL See the COPYING file for more information.</description>
    </item>
    
    <item>
      <title>Ssh Login</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/ssh-login.html</link>
      <pubDate>Thu, 24 May 2018 15:22:36 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/ssh-login.html</guid>
      <description>faq 报错：Too many authentication failures
tom@tom-w10vbud16:~/ztom/bits/pem$ ssh -i vachain_competition.pem ubuntu@ec2-13-125-197-97.ap-northeast-2.compute.amazonaws.com Received disconnect from 13.125.197.97 port 22:2: Too many authentication failures Connection to ec2-13-125-197-97.ap-northeast-2.compute.amazonaws.com closed by remote host. Connection to ec2-13-125-197-97.ap-northeast-2.compute.amazonaws.com closed. tom@tom-w10vbud16:~/ztom/bits/pem$  If you are not using any ssh hosts configuration, you have to explicitly specify the correct key in the ssh command like so:
ssh -i some_id_rsa -o &#39;IdentitiesOnly yes&#39; them@there:/path/  Note: the &amp;lsquo;IdentitiesOnly yes&amp;rsquo; parameter needed to be between quotes.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/ssh/ssh-login-specify-idrsa.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/ssh/ssh-login-specify-idrsa.html</guid>
      <description>今天在服务器上配置了自己电脑的public key，但是还是不能直接免密码登录，
原因是
ssh 对目录的权限有要求，代码中要设置下新生成的config文件权限才行。
~目录权限是750， ~/.ssh 的是700， ~/.ssh/* 的是600， ~/.ssh/config 是700
-rw-rw-r-- 1 webuser webuser 396 Feb 19 04:20 authorized_keys $chmod 600 .ssh/authorized_keys -rw------- 1 webuser webuser 396 Feb 19 04:20 authorized_keys  还有一次是，我死活登录不上 ubuntu@tencent-cloud 。 最后通过web连接登录，然后，机器上用ubuntu用户ssh localhost都登录不了，那就说明一定是权限问题了。 一看，原来，整个文件夹/home/ubuntu/ 的权限被更改成 tom:tom 了。那当然进不来了。所以这时：
sudo chown ubuntu:ubuntu /home/ubuntu/  这样，才能ssh 登录正常。
ref:  https://blog.csdn.net/shiralwz/article/details/50697207
  假如在生成密钥对的时候指定了其他文件名（或者需要控制N台机器，此时你会生成多对密钥），则需要使用参数-i指定私钥文件
$ ssh ubuntu@192.68.0.11 -i ./id_rsa Welcome to Ubuntu 16.04.1 LTS (GNU/Linux 4.4.0-91-generic x86_64) * Documentation: https://help.</description>
    </item>
    
  </channel>
</rss>