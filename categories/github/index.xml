<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on Documentation for Hugo Learn Theme</title>
    <link>https://eiuapp.github.io/eiuapp-learn/categories/github.html</link>
    <description>Recent content in github on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 12 Apr 2018 09:39:07 +0800</lastBuildDate>
    
	<atom:link href="https://eiuapp.github.io/eiuapp-learn/categories/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Github</title>
      <link>https://eiuapp.github.io/eiuapp-learn/cheatsheets/command/command-github.html</link>
      <pubDate>Thu, 12 Apr 2018 09:39:07 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/cheatsheets/command/command-github.html</guid>
      <description> 建立 github.io 工程页面 建立项目主页
 新建一个repo，repo名字随意。 点进repo主页然后点击右面的Settings，页面往下拉到GitHub Pages部分，选择Launch automatic page generator&amp;gt;Continue to layouts&amp;gt;Publish page即可.（由于大部分情况下并不用默认的页面和样式，所以这里不需要太纠结于内容编辑）   这样一个项目主页就建立完成了，此时可以用.github.io/访问到了。
 比如, 我这里有一个repo(如cheatsheets)是可以作为一个项目主页, 然后项目主页建立完成了后，此时可以用.github.io/访问到了&amp;hellip;
ref  单个GitHub帐号下添加多个GitHub Pages的相关问题  </description>
    </item>
    
    <item>
      <title>Mac上SSH-Key对应多个github账号</title>
      <link>https://eiuapp.github.io/eiuapp-learn/macos/mac-ssh-github.html</link>
      <pubDate>Sat, 07 Apr 2018 22:30:59 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/macos/mac-ssh-github.html</guid>
      <description>Mac 上SSH-Key对应多个github账号
当然, 也不单是github帐号, gitlab或者其它账号都是可以的哟&amp;hellip;
前言 因为最近在其他公司帮忙，而其公司用的是他们自己的git服务器，自己本公司又有自己的git服务器，然后自己还用github，造成三个git账号的都要ssh-key，而在网上一搜生成ssh-key的方法都是直接就给你弄全局了，然后肯定又会覆盖原有的ssh-key，所以查了一下关于同机器多账号的ssh-key配置，在此记录一下。
操作步骤 如果我们Mac上面已经有了ssh-key再创建ssh-key的话，需要给我们的ssh-key文件取不同的名字，默认是id_rsa，如果不重新起名的话，会把原有的给覆盖掉。
1.新建ssh-key&amp;amp;重新命名 //切换到ssh目录 cd ~/.ssh //新建ssh-key ssh-keygen -t rsa -C &amp;quot;mywork@email.com&amp;quot; //为新建的ssh-key重新命名 Enter file in which to save the key (/Users/bombvote-zql/.ssh/id_rsa):id_ras_bill_github  2.新ssh-key添加到ssh agent中 因为默认只读取id_rsa，为了让SSH识别新的私钥，需将其添加到SSH agent中：
ssh-add ~/.ssh/id_ras_bill_github  3.配置 将不同账号的工程图服务器与ssh-key关联 #thub user(first@email.com) Host github1 HostName git.some.com/ User git IdentityFile /Users/bombvote-zql/.ssh/id_rsa # second user(second@email.com) # 建一个github别名，新建的帐号使用这个别名做克隆和更新 Host github2 HostName github.com User git IdentityFile /Users/bombvote-zql/.ssh/id_ras_bill_github  4.在git服务器上添加公钥 vim ~/.ssh/id_rsa_bill_github.pub  然后将内容复制添加到服务器账号里面 其规则就是：从上至下读取config的内容，在每个Host下寻找对应的私钥。这里将GitHub SSH仓库地址中的git@github.</description>
    </item>
    
    <item>
      <title>Git常用命令与GitHub使用技巧技巧整理</title>
      <link>https://eiuapp.github.io/eiuapp-learn/git/git-github-tips.html</link>
      <pubDate>Wed, 31 Jan 2018 15:55:36 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/git/git-github-tips.html</guid>
      <description>1. GitHub中同步远程分支
查看本地已有分支
git remote -v  增加远程分支
git remote add upstream https://github.com/k8smeetup/kubernetes.github.io.git git fetch upstream git checkout master git merge upstream/master  2. 更新Git代码并对比
git remote -v git fetch origin master git log -p master.. origin/master git merge origin/master  3. 删除远程分支
git push origin --delete &amp;lt;branchName&amp;gt; git push origin --delete tag &amp;lt;tagName&amp;gt;  4. 删除所有历史记录
Checkout
git checkout --orphan latest_branch  Add all the files
 git add -A  Commit the changes</description>
    </item>
    
  </channel>
</rss>