<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation for Hugo Learn Theme</title>
    <link>https://eiuapp.github.io/eiuapp-learn/ubuntu.html</link>
    <description>Recent content on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 29 Sep 2018 20:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://eiuapp.github.io/eiuapp-learn/ubuntu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker break ufw&#39;s rules in ubuntu - env1</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-docker-break-ufw-rules-state-1.html</link>
      <pubDate>Sat, 29 Sep 2018 20:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-docker-break-ufw-rules-state-1.html</guid>
      <description>docker break ufw&amp;rsquo;s rules in ubuntu - env1
env 当运行docker后
sudo docker run --detach \ --restart always \ --hostname 192.168.168.137 \ --publish 192.168.168.137:12443:443 --publish 192.168.168.137:80:80 --publish 192.168.168.137:22:22 \ --name gitlab-ce-11.9.1-2 \ --volume /srv/gitlab9.1/config:/etc/gitlab \ --volume /srv/gitlab9.1/logs:/var/log/gitlab \ --volume /srv/gitlab9.1/data:/var/opt/gitlab \ gitlab/gitlab-ce:11.9.1-ce.0  也会导致 整个局域网能访问到 80
sudo docker run --detach \ --restart always \ --hostname 192.168.168.137 \ --publish 127.0.0.1:12443:443 --publish 127.0.0.1:80:80 --publish 127.0.0.1:22:22 \ --name gitlab-ce-11.9.1-2 \ --volume /srv/gitlab9.1/config:/etc/gitlab \ --volume /srv/gitlab9.</description>
    </item>
    
    <item>
      <title>docker break ufw&#39;s rules in ubuntu - env2</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-docker-break-ufw-rules-state-2.html</link>
      <pubDate>Sat, 29 Sep 2018 20:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-docker-break-ufw-rules-state-2.html</guid>
      <description>docker break ufw&amp;rsquo;s rules in ubuntu - env2
ufw 阻止了从docker容器到外部的网络连接
对我来说这是一个非常标准的设置，我有一台运行docker和ufw的ubuntu机器作为我的防火墙。 如果启用防火墙，则docker实例无法连接到外部
https://blog.36web.rocks/2016/07/08/docker-behind-ufw.html https://oomake.com/question/4955599
env 当运行docker后
docker 配置 ubuntu@utuntu:~/lcnx/local/lvchuang-server$ sudo cat /etc/docker/daemon.json { &amp;quot;hosts&amp;quot;: [&amp;quot;tcp://0.0.0.0:2376&amp;quot;,&amp;quot;unix:///var/run/docker.sock&amp;quot;], &amp;quot;registry-mirrors&amp;quot;: [&amp;quot;https://0d6wdn2y.mirror.aliyuncs.com&amp;quot;], &amp;quot;dns&amp;quot; : [&amp;quot;192.168.168.222&amp;quot;] } ubuntu@utuntu:~/lcnx/local/lvchuang-server$ sudo cat /etc/default/docker # Docker Upstart and SysVinit configuration file # # THIS FILE DOES NOT APPLY TO SYSTEMD # # Please see the documentation for &amp;quot;systemd drop-ins&amp;quot;: # https://docs.docker.com/engine/admin/systemd/ # # Customize location of Docker binary (especially for development testing).</description>
    </item>
    
    <item>
      <title>ubuntu</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/</link>
      <pubDate>Thu, 20 Sep 2018 20:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/</guid>
      <description>linux ubuntu</description>
    </item>
    
    <item>
      <title>set apt source</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-desktop-set-apt-source.html</link>
      <pubDate>Thu, 29 Nov 2018 17:39:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-desktop-set-apt-source.html</guid>
      <description>https://github.com/vnpy/vnpy/wiki/Ubuntu%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85</description>
    </item>
    
    <item>
      <title>ubuntu intro</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-intro.html</link>
      <pubDate>Thu, 29 Nov 2018 11:07:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-intro.html</guid>
      <description>Contents:
 update-kernel/index how-to-install-certificates-for-command-line ubuntu-desktop/index  </description>
    </item>
    
    <item>
      <title>ubuntu16.04升级内核至 4.10 以上</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu16-update-kernel.html</link>
      <pubDate>Fri, 23 Nov 2018 00:00:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu16-update-kernel.html</guid>
      <description>ubuntu16.04 update-kernel env 192.168.31.118 192.168.31.119  step 浏览器打开 http://kernel.ubuntu.com/~kernel-ppa/mainline/
找到适合的 内核版本（这时v4.12), 进入，
找到合适的内核文件(linux-image-4.12.0-041200-generic_4.12.0-041200.201707022031_amd64.deb)
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.12/linux-image-4.12.0-041200-generic_4.12.0-041200.201707022031_amd64.deb  然后安装就可以了。</description>
    </item>
    
    <item>
      <title>Ubuntu Desktop 环境安装</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-desktop-setup.html</link>
      <pubDate>Thu, 29 Nov 2018 17:50:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-desktop-setup.html</guid>
      <description>安装Ubuntu 全部安装流程：
推荐的Ubuntu环境：
 版本：Ubuntu 16.04 LTS 语言：简体中文 时区：Shanghai 硬件：64位，4G内存以上   引用官方安装教程：点击查看
 更新软件源 apt源
操作步骤如下：
进行上述操作之后，系统会花几分钟时间进行服务器速度的测试。测试完毕之后，点击『选择服务器』，后面根据提示输入密码和重新载入软件信息即可。
pip源
创建pip的配置文件，在终端中执行如下命令创建.pip文件夹
mkdir ~/.pip/  再执行如下命令创建pip.conf文件并编辑
vim ~/.pip/pip.conf  这时候会出现pip.conf的编辑窗口，按字母键a进入到编辑模式，这时候内容为空，并把如下内容输入到编辑框里面
[global] index-url = https://pypi.tuna.tsinghua.edu.cn/simple  编辑完后保存并退出vim： ESC -&amp;gt; shift+; -&amp;gt; x -&amp;gt; Enter
安装Python 下载Anaconda2并安装，在终端中顺序执行下面3行命令
wget https://repo.continuum.io/archive/Anaconda2-4.0.0-Linux-x86_64.sh  chmod +x Anaconda2-4.0.0-Linux-x86_64.sh  ./Anaconda2-4.0.0-Linux-x86_64.sh  然后开始进行安装：
后面根据提示按回车或者输入yes即可，要注意一下在提示是否要在.bashrc文件中更新PATH变量时，一定要输入Yes：
安装完毕之后执行如下命令让bash的配置文件即时生效
source ~/.bashrc  执行完之后执行python命令进行验证，如果安装成功会出现 Anaconda 4.0.0 的字样：
由于vnpy最近对python3的兼容，需要安装future模块，ImportError: No module named &amp;lsquo;Queue&amp;rsquo;
pip install future  安装依赖项 执行如下两行命令分别安装应用软件和pip的库</description>
    </item>
    
    <item>
      <title>命令行下如何安装或者更新 CA.crt 文件</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/how-to-install-certificates-for-command-line-2.html</link>
      <pubDate>Thu, 29 Nov 2018 15:50:00 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/how-to-install-certificates-for-command-line-2.html</guid>
      <description>https://askubuntu.com/questions/645818/how-to-install-certificates-for-command-line
env 192.168.31.120
step 尝试直接 apt install
jlch@km:~$ sudo apt install ./CA.crt [sudo] password for jlch: Reading package lists... Done E: Unsupported file ./CA.crt given on commandline jlch@km:~$  不行，那尝试一下
jlch@km:~$ dpkg-query -L ca-certificates /. /etc /etc/ssl /etc/ssl/certs /etc/ca-certificates /etc/ca-certificates/update.d /usr /usr/sbin /usr/sbin/update-ca-certificates /usr/share /usr/share/ca-certificates /usr/share/ca-certificates/mozilla ... # 看到了好多 mozilla 的证书相关信息呀。 /usr/share/ca-certificates/mozilla/DigiCert_Global_Root_CA.crt /usr/share/doc /usr/share/doc/ca-certificates /usr/share/doc/ca-certificates/examples ... # 好多 examples /usr/share/doc/ca-certificates/examples/ca-certificates-local/README /usr/share/doc/ca-certificates/changelog.gz /usr/share/doc/ca-certificates/copyright /usr/share/doc/ca-certificates/README.Debian /usr/share/doc/ca-certificates/NEWS.Debian.gz /usr/share/man /usr/share/man/man8 /usr/share/man/man8/update-ca-certificates.8.gz jlch@km:~$  那查一下 update-ca-certificates</description>
    </item>
    
    <item>
      <title>Change System Datetime Base Ubuntu</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/change-system-datetime-base-ubuntu.html</link>
      <pubDate>Wed, 11 Jul 2018 10:40:10 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/change-system-datetime-base-ubuntu.html</guid>
      <description>Env  os: ubuntu16  Step 原理 需要取消自动从互联网同步时间才可以的
timedatectl set-ntp 0  上面的命令可以关闭自动同步，然后你再设置就好了
如果又要打开可以运行
timedatectl set-ntp 1  示例 ubuntu@ip-172-31-46-220:~$ date Wed Jul 11 02:08:35 UTC 2018 ubuntu@ip-172-31-46-220:~$ sudo su root@ip-172-31-46-220:/home/ubuntu# timedatectl set-ntp 0 root@ip-172-31-46-220:/home/ubuntu# date -s &amp;quot;2018-07-12 02:08&amp;quot; Thu Jul 12 02:08:00 UTC 2018 root@ip-172-31-46-220:/home/ubuntu# hwclock --systohc root@ip-172-31-46-220:/home/ubuntu# date Thu Jul 12 02:08:06 UTC 2018 root@ip-172-31-46-220:/home/ubuntu# date -s &amp;quot;2018-07-12 02:10&amp;quot; Thu Jul 12 02:10:00 UTC 2018 root@ip-172-31-46-220:/home/ubuntu#  修改成功了</description>
    </item>
    
    <item>
      <title>Ubuntu Install Faq A</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-install-faq-a.html</link>
      <pubDate>Tue, 26 Jun 2018 18:51:29 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-install-faq-a.html</guid>
      <description> U盘安装Ubuntu16.04 server版 提示无法挂载cd-rom数据的解决办法
Step 错误：
使用类似ultraiso的刻录软件会出现这个错误 Failed to copy files from CD-ROM, retry?
解决：
解决的办法是使用win32diskimager制作U盘安装程序，就可以正常安装Ubuntu 16.04 Server。
下载地址win32diskimager
文本框用来输入文件完整地址，后面的文件夹图标是浏览窗口，默认只能识别img文件。 只需要将iso文件全路径输入在Image File中。 填好镜像的完整地址后右边有个下拉列表用来选择移动设备，千万别选错了！
建议只插一个U盘，以免误操作。之后点击Wirte按钮就开始写入。写入后就能够使用U盘安装了。
Ref  http://blog.51cto.com/gentle/1743114 https://blog.csdn.net/w_ww_w/article/details/18219911 https://sourceforge.net/projects/win32diskimager/?source=typ_redirect  </description>
    </item>
    
    <item>
      <title>How to Install Certificates for Command Line</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/how-to-install-certificates-for-command-line.html</link>
      <pubDate>Thu, 21 Jun 2018 22:32:14 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/how-to-install-certificates-for-command-line.html</guid>
      <description>当你有一个 CA.crt 文件时，怎么安装它，然后使用呢？我遇到了这个问题。
Env  os: ubuntu16 192.168.31.120  Step 尝试直接 apt install
jlch@km:~$ sudo apt install ./CA.crt [sudo] password for jlch: Reading package lists... Done E: Unsupported file ./CA.crt given on commandline jlch@km:~$  不行，那尝试一下
jlch@km:~$ dpkg-query -L ca-certificates /. /etc /etc/ssl /etc/ssl/certs /etc/ca-certificates /etc/ca-certificates/update.d /usr /usr/sbin /usr/sbin/update-ca-certificates /usr/share /usr/share/ca-certificates /usr/share/ca-certificates/mozilla ... # 看到了好多 mozilla 的证书相关信息呀。 /usr/share/ca-certificates/mozilla/DigiCert_Global_Root_CA.crt /usr/share/doc /usr/share/doc/ca-certificates /usr/share/doc/ca-certificates/examples ... # 好多 examples /usr/share/doc/ca-certificates/examples/ca-certificates-local/README /usr/share/doc/ca-certificates/changelog.gz /usr/share/doc/ca-certificates/copyright /usr/share/doc/ca-certificates/README.Debian /usr/share/doc/ca-certificates/NEWS.</description>
    </item>
    
    <item>
      <title>Update Kernel Base Ubuntu</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/update-kernel-base-ubuntu.html</link>
      <pubDate>Thu, 21 Jun 2018 21:55:37 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/update-kernel-base-ubuntu.html</guid>
      <description> ubuntu16.04 update-kernel
Env  os: ubuntu16.04 ip: 192.168.31.118  Step 浏览器打开 http://kernel.ubuntu.com/~kernel-ppa/mainline/
找到适合的 内核版本（这时v4.12), 进入，
找到合适的内核文件(linux-image-4.12.0-041200-generic_4.12.0-041200.201707022031_amd64.deb)
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.12/linux-image-4.12.0-041200-generic_4.12.0-041200.201707022031_amd64.deb  然后安装就可以了。
Ref  http://kernel.ubuntu.com/~kernel-ppa/mainline/  </description>
    </item>
    
    <item>
      <title>Static Ip Ubuntu18</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/static-ip-ubuntu18.html</link>
      <pubDate>Sat, 16 Jun 2018 21:52:43 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/static-ip-ubuntu18.html</guid>
      <description>ubuntu18设置固态IP
Env  os: ubuntu18  Step ubuntu16 ubuntu16是在/etc/network/interfaces 文件中设置固态IP 设置的方式类似下面
source /etc/network/interfaces.d/* # The loopback network interface auto lo iface lo inet loopback # The primary network interface auto ens160 #iface ens160 inet dhcp iface ens160 inet static address 192.168.31.120 gateway 192.168.31.1 #这个地址你要确认下 网关是不是这个地址 netmask 255.255.255.0 network 192.168.31.0 broadcast 192.168.31.255 dns-nameservers 202.96.134.133  ubuntu17及以上 但是，ubuntu17起，改成了etc/netplan/*.yaml来配置。
配置方式类似下面
tom@tom:~$ cat /etc/netplan/50-cloud-init.yaml # This file is generated from information provided by # the datasource.</description>
    </item>
    
    <item>
      <title>Ubuntu Command Not Found</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-command-not-found.html</link>
      <pubDate>Sat, 16 Jun 2018 18:08:48 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-command-not-found.html</guid>
      <description> add-apt-repository: command not found When I run:
sudo add-apt-repository ppa:ubuntu-wine/ppa  Log here:
sudo: add-apt-repository: command not found  solved I tried to run:
sudo apt-get install software-properties-common  </description>
    </item>
    
    <item>
      <title>Ubuntu Network Proxy Shadowsocks Server</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-shadowsock-server.html</link>
      <pubDate>Mon, 11 Jun 2018 20:34:39 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-shadowsock-server.html</guid>
      <description>Env  os: ubuntu16 ip: 192.168.168.137  Ref cd sudo pip install shadowsocks which sslocal sudo vi /etc/shadowsocks.json sslocal -c /etc/shadowsocks.json start sslocal -c /etc/shadowsocks.json sslocal -c /etc/shadowsocks.json -d start vi /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py sslocal -c /etc/shadowsocks.json -d start sslocal -c /etc/shadowsocks.json -d stop sslocal -c /etc/shadowsocks.json -d start netstat -tlpnu vi /etc/shadowsocks.json cat /etc/shadowsocks.json sslocal -c /etc/shadowsocks.json -d stop sslocal -c /etc/shadowsocks.json -d start sudo vim /etc/systemd/system/shadowsocks.service sudo systemctl enable /etc/systemd/system/shadowsocks.</description>
    </item>
    
    <item>
      <title>Ubuntu Apt Http Proxy</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-apt-http-proxy.html</link>
      <pubDate>Thu, 24 May 2018 10:16:52 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-apt-http-proxy.html</guid>
      <description>Ubuntu的更改apt-get代理，设置与取消
apt代理的设置 方法1 这是一种临时的手段，如果您仅仅是暂时需要通过http代理使用apt-get，您可以使用这种方式。
在使用apt-get之前，在终端中输入以下命令（根据您的实际情况替换yourproxyaddress和proxyport）。
export http_proxy=http://yourproxyaddress:proxyport  方法2 这种方法要用到/etc/apt/文件夹下的apt.conf文件。如果您希望apt-get（而不是其他应用程序）一直使用http代理，您可以使用这种方式。
注意：某些情况下，系统安装过程中没有建立apt配置文件。下面的操作将视情况修改现有的配置文件或者新建配置文件。
sudo gedit /etc/apt/apt.conf在您的apt.conf文件中加入下面这行（根据你的实际情况替换yourproxyaddress和proxyport）。
Acquire::http::Proxy &amp;quot;http://yourproxyaddress:proxyport&amp;quot;  保存apt.conf文件。
方法3 这种方法会在您的主目录下的.bashrc文件中添加两行。如果您希望apt-get和其他应用程序如wget等都使用http代理，您可以使用这种方式。
gedit ~/.bashrc在您的.bashrc文件末尾添加如下内容（根据你的实际情况替换yourproxyaddress和proxyport）。
http_proxy=http://yourproxyaddress:proxyport  export http_proxy保存文件。关闭当前终端，然後打开另一个终端。
使用apt-get update或者任何您想用的网络工具测试代理。我使用firestarter查看活动的网络连接。
如果您为了纠正错误而再次修改了配置文件，记得关闭终端并重新打开，否自新的设置不会生效。
方法4 另外，apt-get也有一个“-o”选项，直接跟apt-get的设置变量，就不用指定配置文件了，比如
sudo apt-get -o Acquire::http::proxy=&amp;quot;http://127.0.0.1:1080/”  取消apt代理 今天想装个软件(wine)，使用 sudo apt-get update 命令时，发现给出很多Ign 语句，总出现 Connecting to proxy.http://10.0.126.1:13128 的字样，发现这个代理是已经废弃掉的。接着想去取消使用该代理： 1、 查看/etc/apt/apt.conf，发现存在： http_proxy=&amp;quot;http://10.0.126.1:13128/&amp;quot; https_proxy=&amp;quot;https://10.0.126.1:13128/&amp;quot; ftp_proxy=&amp;quot;ftp://10.0.126.1:13128/&amp;quot; socks_proxy=&amp;quot;socks://10.0.126.1:13128/&amp;quot; 直接删除该文件，重启电脑，发现问题还是没解决； 2、百度一下，命令行执行：export http_proxy=&amp;quot;&amp;quot; 发现问题未解； 执行 unset http_proxy 问题还是存在； 3、查看~/.bashrc，未发现存在http_proxy之类设置; 4、env | grep proxy 发现依然存在 http 代理； 5、根目录查找一把： sudo grep -r -i http_proxy=http://10.</description>
    </item>
    
    <item>
      <title>Ubuntu Install Wubipinyin</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-install-wubipinyin.html</link>
      <pubDate>Thu, 24 May 2018 09:32:16 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-install-wubipinyin.html</guid>
      <description> ubuntu安装 五笔拼音输入法
env  Ubuntu Desktop 16.04  step 方法1 https://www.linuxdashen.com/ubuntu-16-04-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85fcitx%E4%BA%94%E7%AC%94%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95
方法2 sudo add-apt-repository ppa:fcitx-team/nightly sudo apt update -y sudo apt -y install fcitx sudo apt -y install fcitx-table-wbpy  System Setting/Language Support/Keyboard input method system/ =&amp;gt; fcitx
打开System Setting系统设置&amp;gt;Text Entry
记得重启哟！
ref  https://www.linuxdashen.com/ubuntu-16-04-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85fcitx%E4%BA%94%E7%AC%94%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5%E6%B3%95 https://blog.csdn.net/zzqlivecn/article/details/25018203 https://blog.csdn.net/hamigua0208/article/details/51421117 https://blog.csdn.net/e421083458/article/details/37738805  </description>
    </item>
    
    <item>
      <title></title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-docker-change-ufw-rules.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-docker-change-ufw-rules.html</guid>
      <description>见 https://eiuapp.github.io/linux-handbook/</description>
    </item>
    
    <item>
      <title></title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-reboot-cannot-ping-qq.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-reboot-cannot-ping-qq.html</guid>
      <description>虚拟机网络在vmware中配置正确，但是，重新启动后，又连接不上外网了。 这个时候，查一下
➜ ~ cat /etc/network/interfaces # interfaces(5) file used by ifup(8) and ifdown(8) auto lo iface lo inet loopback auto ens33 iface ens33 inet static address 192.168.0.103 netmask 255.255.255.0 gateway 192.168.0.1 auto ens38 iface ens38 inet dhcp #iface ens38 inet static #address 192.168.100.50 #netmask 255.255.255.0 #up ip link set dev $IFACE up #down ip link set dev $IFACE down #auto ens39 #iface ens39 inet dhcp ➜ ~ cat /etc/resolv.conf # Dynamic resolv.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-ssh-login-error-system-is-booting-up-see-pam-nologin-8.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-ssh-login-error-system-is-booting-up-see-pam-nologin-8.html</guid>
      <description> ssh无法远程连接ubuntu系统，提示System is booting up. See pam_nologin(8)
env 本机也无法登陆, 如 ssh ubuntu@127.0.0.1
os: ubuntu16
step The only way to get out of there is by pressing CTRL+ALT+F1 and then CTRL+ALT+DELETE.
先按 CTRL+ALT+F1 ，再按 CTRL+ALT+DELETE 令系统重启，就可以了。
ref  https://ubuntuforums.org/showthread.php?t=2327330  </description>
    </item>
    
  </channel>
</rss>