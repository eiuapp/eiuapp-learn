<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>proxy on Documentation for Hugo Learn Theme</title>
    <link>https://eiuapp.github.io/eiuapp-learn/tags/proxy.html</link>
    <description>Recent content in proxy on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 10 Aug 2018 09:49:28 +0800</lastBuildDate>
    
	<atom:link href="https://eiuapp.github.io/eiuapp-learn/tags/proxy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proxy</title>
      <link>https://eiuapp.github.io/eiuapp-learn/network/proxy.html</link>
      <pubDate>Fri, 10 Aug 2018 09:49:28 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/network/proxy.html</guid>
      <description>正确的设置代理
Env  os: linux  Step root@tom:~/proxy# cat ./proxy_on.sh #!/bin/sh # for terminal export proxyserveraddr=127.0.0.1 export proxyserverport=8118 export HTTP_PROXY=&amp;quot;http://$proxyserveraddr:$proxyserverport/&amp;quot; export HTTPS_PROXY=&amp;quot;https://$proxyserveraddr:$proxyserverport/&amp;quot; export FTP_PROXY=&amp;quot;ftp://$proxyserveraddr:$proxyserverport/&amp;quot; export SOCKS_PROXY=&amp;quot;socks://$proxyserveraddr:$proxyserverport/&amp;quot; export NO_PROXY=&amp;quot;localhost,127.0.0.1,localaddress,.localdomain.com,200.200..;11.11.0.0;&amp;quot; export http_proxy=&amp;quot;http://$proxyserveraddr:$proxyserverport/&amp;quot; export https_proxy=&amp;quot;https://$proxyserveraddr:$proxyserverport/&amp;quot; export ftp_proxy=&amp;quot;ftp://$proxyserveraddr:$proxyserverport/&amp;quot; export socks_proxy=&amp;quot;socks://$proxyserveraddr:$proxyserverport/&amp;quot; export no_proxy=&amp;quot;localhost,127.0.0.1,localaddress,.localdomain.com,200.200..;11.11.0.0,10.88..;&amp;quot; # for chrome,firefox gsettings set org.gnome.system.proxy ignore-hosts &amp;quot;[&#39;localhost&#39;, &#39;11.11.0.0/16&#39;, &#39;200.200.0.0/16&#39;, &#39;*.localdomain.com&#39;, &#39;10.88.0.0/16&#39;, &#39;10.88.88.116&#39; ]&amp;quot; # for apt-get cat &amp;lt;&amp;lt;-EOF| sudo tee /etc/apt/apt.conf Acquire::http::proxy &amp;quot;http://$proxyserveraddr:$proxyserverport/&amp;quot;; Acquire::https::proxy &amp;quot;https://$proxyserveraddr:$proxyserverport/&amp;quot;; Acquire::ftp::proxy &amp;quot;ftp://$proxyserveraddr:$proxyserverport/&amp;quot;; Acquire::socks::proxy &amp;quot;socks://$proxyserveraddr:$proxyserverport/&amp;quot;; EOF  root@tom:~/proxy# cat proxy_off.</description>
    </item>
    
    <item>
      <title>Docker Pull With Proxy</title>
      <link>https://eiuapp.github.io/eiuapp-learn/docker/docker-pull-with-proxy.html</link>
      <pubDate>Sun, 17 Jun 2018 23:38:57 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/docker/docker-pull-with-proxy.html</guid>
      <description> 透过proxy进行docker pull
Env  os: ubuntu16 os: centos  Step  对于Ubuntu 系统  sudo vi /etc/default/docker   对于Centos 系统  sudo vi /etc/sysconfig/docker  把下面的内容加到尾部
HTTP_PROXY=http://192.168.31.112:8118 http_proxy=${HTTP_PROXY} HTTPS_PROXY=${HTTP_PROXY} https_proxy=${HTTP_PROXY} export HTTP_PROXY HTTPS_PROXY http_proxy https_proxy  重启docker
sudo systemctl restart docker sudo systemctl status docker  然后再进行相关的 docker pull 操作就可以了。
Ref  https://blog.csdn.net/u011563903/article/details/52161648  </description>
    </item>
    
    <item>
      <title>Network Proxy Shadowsocks Server</title>
      <link>https://eiuapp.github.io/eiuapp-learn/network/network-proxy-shadowsocks-server.html</link>
      <pubDate>Mon, 11 Jun 2018 20:34:39 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/network/network-proxy-shadowsocks-server.html</guid>
      <description> Env  cloud: aws os: ubuntu16 ip: 美国IP  Ref 直接看下面文章就可以了 - https://github.com/flyzy2005/ss-fly - https://www.flyzy2005.com/fan-qiang/shadowsocks/install-shadowsocks-in-one-command/#shadowsocks
Step git clone https://github.com/Flyzy2005/ss-fly ss-fly/ss-fly.sh -i password 1024 ping www.youtube.com  修改配置文件：vim /etc/shadowsocks.json 停止ss服务：ssserver -c /etc/shadowsocks.json -d stop 启动ss服务：ssserver -c /etc/shadowsocks.json -d start 重启ss服务：ssserver -c /etc/shadowsocks.json -d restart  卸载ss服务
ss-fly/ss-fly.sh -uninstall  Article 注意：在特殊时期，一般是大会期间，即使是设置好了 SS,但是还是不能科学上网。 比如，我就遇到了一次，在 上合组织峰会第十八次峰会-青岛峰会（2018年6月9日到10日）之后的，2018-06-11号，就出现了（大佬们，有没有哪位，和我类似）情况：
 美国IP 不能科学上网 香港IP 能科学上网  还有一种可能性，IP段中的其他同志的IP搞歪东西，把我给扯到了。 GXB直接封的IP段，这个时候，IP段中的新机器也不行。
一键脚本搭建SS/搭建SSR服务并开启BBR加速
Ref  https://blog.csdn.net/ZhangAdo/article/details/50663527 https://blog.csdn.net/f59130/article/details/74014415 https://blog.csdn.net/amoscn/article/details/79364599  </description>
    </item>
    
    <item>
      <title>Ubuntu Network Proxy Shadowsocks Server</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-shadowsock-server.html</link>
      <pubDate>Mon, 11 Jun 2018 20:34:39 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-shadowsock-server.html</guid>
      <description>Env  os: ubuntu16 ip: 192.168.168.137  Ref cd sudo pip install shadowsocks which sslocal sudo vi /etc/shadowsocks.json sslocal -c /etc/shadowsocks.json start sslocal -c /etc/shadowsocks.json sslocal -c /etc/shadowsocks.json -d start vi /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py sslocal -c /etc/shadowsocks.json -d start sslocal -c /etc/shadowsocks.json -d stop sslocal -c /etc/shadowsocks.json -d start netstat -tlpnu vi /etc/shadowsocks.json cat /etc/shadowsocks.json sslocal -c /etc/shadowsocks.json -d stop sslocal -c /etc/shadowsocks.json -d start sudo vim /etc/systemd/system/shadowsocks.service sudo systemctl enable /etc/systemd/system/shadowsocks.</description>
    </item>
    
    <item>
      <title>Network Proxy Win10</title>
      <link>https://eiuapp.github.io/eiuapp-learn/network/network-proxy-win10.html</link>
      <pubDate>Mon, 11 Jun 2018 10:10:16 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/network/network-proxy-win10.html</guid>
      <description> 通过win10实现FQ
Env  os: win10  Step 先配置Shadowsocks privoxy or not 方法1 不配置 privoxy 其实可以不配置privoxy,而使得socks5生效。
具体步骤如下：
配置的过程中，可以通过一个pac 文件过滤url,这个地方，怎么设置的呢？看下图
方法2 配置 privoxy </description>
    </item>
    
    <item>
      <title>Network Proxy Iphone</title>
      <link>https://eiuapp.github.io/eiuapp-learn/network/network-proxy-iphone.html</link>
      <pubDate>Mon, 28 May 2018 16:14:28 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/network/network-proxy-iphone.html</guid>
      <description>通过手机实现FQ
env 国外安装了代理网络的服务器一台
 ip: ... port: 443 passwd: ********  iphone一台
 APP安装：ShadowBroken  step 先保证在windows中能够使用Shadowsocks客户端实现科学上网
打开 ShadowBroken，把配置写入，然后，连接。现在可以KXSW了。
todo 在 超哥 提供的jumper机器上，实现一个科学上网吧。</description>
    </item>
    
    <item>
      <title>Linux Http Proxy</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/linux-http-proxy.html</link>
      <pubDate>Thu, 24 May 2018 11:30:50 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/linux-http-proxy.html</guid>
      <description>linux-proxy 相关
proxy FQ root@km:~# cat proxy.sh #!/bin/bash NO_PROXY=localhost,127.0.0.1/8,192.168.31.1/24 export NO_PROXY export http_proxy=http://192.168.31.10:1080/ export https_proxy=http://192.168.31.10:1080/ root@km:~#  这个问题，可以参考 https://blog.finsoft.info/posts/ubuntu-apt-http-proxy/#%E5%8F%96%E6%B6%88apt%E4%BB%A3%E7%90%86
终端： [tom@mpro Desktop]$ export http_proxy=http://192.168.31.10:8031 # 这个 http://192.168.31.10:8031 是在 192.168.31.10的机器提供出来的 地址。 192.168.31.10的机器 是代理服务器。 [tom@mpro Desktop]$ export https_proxy=http://192.168.31.10:8031 [tom@mpro Desktop]$ ping www.google.com.hk # 代理后，ping 依然是不行的。呵呵 PING www.google.com.hk (93.46.8.89) 56(84) bytes of data. ^C --- www.google.com.hk ping statistics --- 6 packets transmitted, 0 received, 100% packet loss, time 4999ms [tom@mpro Desktop]$ wget www.</description>
    </item>
    
    <item>
      <title>Linux Wgetrc Wget Proxy</title>
      <link>https://eiuapp.github.io/eiuapp-learn/linux/linux-wgetrc-wget-proxy.html</link>
      <pubDate>Thu, 24 May 2018 11:24:18 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/linux/linux-wgetrc-wget-proxy.html</guid>
      <description> wgetrc打开 wget 的代理
env  centos  step 通过 /etc/wgetrc 打开 wget 的代理
[root@www ~]# vim /etc/wgetrc #http_proxy = http://proxy.yoyodyne.com:18023/ &amp;lt;==找到底下这几行，大约在 78 行 #ftp_proxy = http://proxy.yoyodyne.com:18023/ #use_proxy = on # 将他改成类似底下的模样，记得，你必须要有可接受的 proxy 主机才行！ http_proxy = http://192.168.31.10:8031/ use_proxy = on # use_proxy=off ## 关闭 [root@www ~]#  ref  http://cn.linux.vbird.org/linux_server/0140networkcommand.php#wget  </description>
    </item>
    
    <item>
      <title>Ubuntu Apt Http Proxy</title>
      <link>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-apt-http-proxy.html</link>
      <pubDate>Thu, 24 May 2018 10:16:52 +0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/ubuntu/ubuntu-apt-http-proxy.html</guid>
      <description>Ubuntu的更改apt-get代理，设置与取消
apt代理的设置 方法1 这是一种临时的手段，如果您仅仅是暂时需要通过http代理使用apt-get，您可以使用这种方式。
在使用apt-get之前，在终端中输入以下命令（根据您的实际情况替换yourproxyaddress和proxyport）。
export http_proxy=http://yourproxyaddress:proxyport  方法2 这种方法要用到/etc/apt/文件夹下的apt.conf文件。如果您希望apt-get（而不是其他应用程序）一直使用http代理，您可以使用这种方式。
注意：某些情况下，系统安装过程中没有建立apt配置文件。下面的操作将视情况修改现有的配置文件或者新建配置文件。
sudo gedit /etc/apt/apt.conf在您的apt.conf文件中加入下面这行（根据你的实际情况替换yourproxyaddress和proxyport）。
Acquire::http::Proxy &amp;quot;http://yourproxyaddress:proxyport&amp;quot;  保存apt.conf文件。
方法3 这种方法会在您的主目录下的.bashrc文件中添加两行。如果您希望apt-get和其他应用程序如wget等都使用http代理，您可以使用这种方式。
gedit ~/.bashrc在您的.bashrc文件末尾添加如下内容（根据你的实际情况替换yourproxyaddress和proxyport）。
http_proxy=http://yourproxyaddress:proxyport  export http_proxy保存文件。关闭当前终端，然後打开另一个终端。
使用apt-get update或者任何您想用的网络工具测试代理。我使用firestarter查看活动的网络连接。
如果您为了纠正错误而再次修改了配置文件，记得关闭终端并重新打开，否自新的设置不会生效。
方法4 另外，apt-get也有一个“-o”选项，直接跟apt-get的设置变量，就不用指定配置文件了，比如
sudo apt-get -o Acquire::http::proxy=&amp;quot;http://127.0.0.1:1080/”  取消apt代理 今天想装个软件(wine)，使用 sudo apt-get update 命令时，发现给出很多Ign 语句，总出现 Connecting to proxy.http://10.0.126.1:13128 的字样，发现这个代理是已经废弃掉的。接着想去取消使用该代理： 1、 查看/etc/apt/apt.conf，发现存在： http_proxy=&amp;quot;http://10.0.126.1:13128/&amp;quot; https_proxy=&amp;quot;https://10.0.126.1:13128/&amp;quot; ftp_proxy=&amp;quot;ftp://10.0.126.1:13128/&amp;quot; socks_proxy=&amp;quot;socks://10.0.126.1:13128/&amp;quot; 直接删除该文件，重启电脑，发现问题还是没解决； 2、百度一下，命令行执行：export http_proxy=&amp;quot;&amp;quot; 发现问题未解； 执行 unset http_proxy 问题还是存在； 3、查看~/.bashrc，未发现存在http_proxy之类设置; 4、env | grep proxy 发现依然存在 http 代理； 5、根目录查找一把： sudo grep -r -i http_proxy=http://10.</description>
    </item>
    
  </channel>
</rss>