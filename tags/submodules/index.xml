<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>submodules on Documentation for Hugo Learn Theme</title>
    <link>https://eiuapp.github.io/eiuapp-learn/tags/submodules.html</link>
    <description>Recent content in submodules on Documentation for Hugo Learn Theme</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Mon, 28 Jan 2019 00:00:00 -0800</lastBuildDate>
    
	<atom:link href="https://eiuapp.github.io/eiuapp-learn/tags/submodules/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>git中submodule子模块的添加、使用和删除</title>
      <link>https://eiuapp.github.io/eiuapp-learn/git/git-submodules-add-usage-delete.html</link>
      <pubDate>Mon, 28 Jan 2019 00:00:00 -0800</pubDate>
      
      <guid>https://eiuapp.github.io/eiuapp-learn/git/git-submodules-add-usage-delete.html</guid>
      <description>背景 项目中经常使用别人维护的模块，在git中使用子模块的功能能够大大提高开发效率。
使用子模块后，不必负责子模块的维护，只需要在必要的时候同步更新子模块即可。
本文主要讲解子模块相关的基础命令，详细使用请参考man page。
子模块的添加 添加子模块非常简单，命令如下：
git submodule add &amp;lt;url&amp;gt; &amp;lt;path&amp;gt;  其中，url为子模块的路径，path为该子模块存储的目录路径。
执行成功后，git status会看到项目中修改了.gitmodules，并增加了一个新文件（为刚刚添加的路径）
git diff &amp;ndash;cached查看修改内容可以看到增加了子模块，并且新文件下为子模块的提交hash摘要
git commit提交即完成子模块的添加
子模块的使用 克隆项目后，默认子模块目录下无任何内容。需要在项目根目录执行如下命令完成子模块的下载：
git submodule init git submodule update  或：
git submodule update --init --recursive  执行后，子模块目录下就有了源码，再执行相应的makefile即可。
子模块的更新 子模块的维护者提交了更新后，使用子模块的项目必须手动更新才能包含最新的提交。
在项目中，进入到子模块目录下，执行 git pull更新，查看git log查看相应提交。
完成后返回到项目目录，可以看到子模块有待提交的更新，使用git add，提交即可。
修改Submodule URL 修改某模块URL
 修改&amp;rsquo;.gitmodules&amp;rsquo;文件中对应模块的url属性; 使用`git submodule sync`命令，将新的URL更新到文件.git/config；  thinker-g@localhost: ~/app$ git submodule sync Synchronizing submodule url for &#39;gitmods/thinker_g/Helpers&#39; thinker-g@localhost: ~/app$ # 运行后可观察到&#39;.git/config&#39;中对应模块的url属性被更新 thinker-g@localhost: ~/app$ git commit -am &amp;quot;Update submodule url.</description>
    </item>
    
  </channel>
</rss>